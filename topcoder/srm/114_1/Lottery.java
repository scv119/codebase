import java.util.*;
public class Lottery{
	public String[] sortByOdds(String[] para){
		List<List> list = new ArrayList<List>();
		for(String s:para){
			String pair[] = s.split(":");
			String name = pair[0];
			pair = pair[1].split(" ");
			int choice = Integer.parseInt(pair[1]);
			int blank  = Integer.parseInt(pair[2]);
			boolean sort = pair[3].equals("T")?true:false;
			boolean unique = pair[4].equals("T")?true:false;
			long score     = analyze(choice, blank, sort, unique);
			List item = new ArrayList(2);
			item.add(name);
			item.add(score);
			list.add(item);
		}
		@SuppressWarnings("rawtypes")
		List[] l = sort(list);
		String[] r = new String[para.length];
		int i = 0;
		for(List item:l){
			r[i++] = (String)item.get(0);
		}
		return r;
	}
	
	public List[] sort(List<List> array){
		int i = 0;
		List[] result = new List[array.size()];
		for(List item: array){
			result[i++] = item;
		}
		int min = -1;
		for(i = 0; i < array.size() - 1; i ++){
			min = -1;
			for(int j = i ; j < array.size(); j++){
				if(min == -1){
					min = j;
				}
				else{
					long m_v = (Long)(result[min].get(1));
					long j_v = (Long)(result[j].get(1));
					String m_s = ((String)(result[min].get(0)));
					String j_s = ((String)(result[j].get(0)));
					
					if(m_v > j_v)
						min = j;
					else if( m_v == j_v && j_s.compareTo(m_s) < 0)
						min = j;
				}
			}
			List tmp = result[i];
			result[i] = result[min];
			result[min] = tmp;
		}
		return result;
	}
	
	public long analyze(int choice, int blank, boolean sort, boolean unique){
		long result = 1;
		if(! sort && !unique){
			for(int i = 0 ; i < blank; i ++ ){
				result *= choice;
			}
		}
		else if(!sort && unique){
			for(int i = 0 ; i < blank; i ++){
				result *= (choice - i);
			}
		}
		else if(sort && !unique){
			result = f1(choice, blank);
		}
		else{
			result = f2( choice, blank);
		}
		return result;
	}
	
	public long f1( int choice, int blank){
		long[][] dp= new long[choice + 1][blank  + 1];
		for(int i = 1 ; i <= choice; i ++){
			dp[i][1] = i;
		}
		for(int j = 2; j<= blank; j++){
			for(int i = 1; i <= choice; i++){
				for(int k = 0 ; k < j; k ++){
					dp[i][j] += dp[i-1][j-k];
				}
				dp[i][j]+= 1;
			}
		}
		return dp[choice][blank];
	}
	
	
	public long f2( int choice, int blank){
		long[][] dp= new long[choice + 1][blank  + 1];
		for(int i = 1 ; i <= choice; i ++){
			dp[i][1] = i;
		}
		for(int j = 2; j<= blank; j++){
			for(int i = 1; i <= choice; i++){
				dp[i][j]= dp[i-1][j] + dp[i-1][j-1];
			}
		}
		return dp[choice][blank];
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		Lottery obj;
		String[] answer;
		obj = new Lottery();
		long startTime = System.currentTimeMillis();
		answer = obj.sortByOdds(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"PICK ANY TWO: 10 2 F F","PICK TWO IN ORDER: 10 2 T F","PICK TWO DIFFERENT: 10 2 F T","PICK TWO LIMITED: 10 2 T T"};
		p1 = new String[]{"PICK TWO LIMITED","PICK TWO IN ORDER","PICK TWO DIFFERENT","PICK ANY TWO"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"INDIGO: 93 8 T F","ORANGE: 29 8 F T","VIOLET: 76 6 F F","BLUE: 100 8 T T","RED: 99 8 T T","GREEN: 78 6 F T","YELLOW: 75 6 F F"};
		p1 = new String[]{"RED","ORANGE","YELLOW","GREEN","BLUE","INDIGO","VIOLET"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{};
		p1 = new String[]{};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
	
}
